name: CI

on:
  push:
    branches:
      - main
  pull_request:

  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  typos:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Spell check
        uses: crate-ci/typos@master

  check:
    name: Compilation Check
    runs-on: ubuntu-latest

    env:
        RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: Swatinem/rust-cache@v2.7.8

      - name: Run Clippy
        run: cargo clippy --all-features --all-targets

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository

    env:
        RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: Swatinem/rust-cache@v2.7.8
        with:
          cache-on-failure: true

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest
          checksum: true

      - name: Download Encrypted Connector Credentials from S3 and Decrypt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CONNECTOR_CREDS_AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.CONNECTOR_CREDS_AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CONNECTOR_CREDS_AWS_SECRET_ACCESS_KEY }}
          CONNECTOR_AUTH_PASSPHRASE: ${{ secrets.CONNECTOR_AUTH_PASSPHRASE }}
          CONNECTOR_CREDS_S3_BUCKET_URI: ${{ secrets.CONNECTOR_CREDS_S3_BUCKET_URI}}
          DESTINATION_FILE_NAME: "creds.json.gpg"
          S3_SOURCE_FILE_NAME: "9f00461f-5a48-4f9c-aa8c-3510e4cb7d9c.json.gpg"
        shell: bash
        run: |
          # Skip credential download for forks or when secrets are not available
          if [[ -z "$AWS_ACCESS_KEY_ID" || -z "$CONNECTOR_AUTH_PASSPHRASE" ]]; then
            echo "Skipping credential download - secrets not available (likely a fork PR)"
            exit 0
          fi

          mkdir -p ".github/secrets" ".github/test"

          aws s3 cp "${CONNECTOR_CREDS_S3_BUCKET_URI}/${S3_SOURCE_FILE_NAME}" ".github/secrets/${DESTINATION_FILE_NAME}"
          gpg --quiet --batch --yes --decrypt --passphrase="${CONNECTOR_AUTH_PASSPHRASE}" --output ".github/test/creds.json" ".github/secrets/${DESTINATION_FILE_NAME}"

      - name: Set connector credentials path in environment
        shell: bash
        run: |
          # Only set the environment variable if the credentials file exists
          if [[ -f ".github/test/creds.json" ]]; then
            echo "CONNECTOR_AUTH_FILE_PATH=${{ github.workspace }}/.github/test/creds.json" >> $GITHUB_ENV
            echo "Connector credentials available for tests"
          else
            echo "No connector credentials available - tests will use default values"
          fi

      - name: Run Tests
        shell: bash
        run: cargo nextest run --config-file .nextest.toml --profile ci

  formatting:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        shell: bash
        run: cargo +nightly fmt --all --check
